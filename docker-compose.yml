version: "3.5"

services:
  # Install postgres and setup the student database.
  postgres:
    container_name: postgres
    image: debezium/postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=studentdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - data-subnet

  # Install zookeeper. 
  zookeeper:
    container_name: zookeeper
    image: zookeeper
    ports:
      - 2181:2181
    networks:
      - data-subnet

  # Install kafka and create needed topics. 
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    hostname: kafka
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - data-subnet

  # Install debezium-connect. 
  debezium-connect:
    container_name: debezium-connect
    image: custom-debezium-connect
    #debezium/connect
    hostname: debezium-connect 
    ports:
      - '8083:8083'
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: bond_debezium_connect_config
      OFFSET_STORAGE_TOPIC: bond_debezium_connect_offsets
      STATUS_STORAGE_TOPIC: bond_debezium_connect_status
      BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - kafka
      - postgres
    networks:
      #- app-subnet
      - data-subnet
  redpanda:
    image: docker.redpanda.com/vectorized/console:master-0a8fce8
    ports:
      - '8080:8080'
    environment:
      KAFKA_BROKERS: kafka:29092
    networks:
      - data-subnet
## sudo docker run --network=data-subnet -p 8080:8080 -e KAFKA_BROKERS=kafka:9092 docker.redpanda.com/vectorized/console:master-0a8fce8
## sudo docker network create data-subnet --subnet 10.0.1.0/24
## sudo docker network create app-subnet --subnet 10.0.2.0/24
networks:
  data-subnet:
    external:
      name: data-subnet
  app-subnet:
    external:
      name: app-subnet